% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glify-points.R, R/glify-polygons.R
\name{addGlifyPoints}
\alias{addGlifyPoints}
\alias{addGlifyPolygons}
\title{add points/polygons to a leaflet map using Leaflet.glify}
\usage{
addGlifyPoints(map, data, color = cbind(0, 0.2, 1), opacity = 1,
  weight = 10, group = "glpoints", popup = NULL, ...)

addGlifyPolygons(map, data, color = cbind(0, 0.2, 1), opacity = 0.6,
  weight = 10, group = "glpolygons", popup = NULL, ...)
}
\arguments{
\item{map}{a leaflet map to add points/polygons to.}

\item{data}{sf/sp point/polygon data to add to the map.}

\item{color}{a three-column rgb matrix with values between 0 and 1.}

\item{opacity}{feature opacity. Numeric between 0 and 1.
Note: expect funny results if you set this to < 1.}

\item{weight}{point size in pixels.}

\item{group}{a group name for the feature layer.}

\item{popup}{the name of the column in data to be used for popups.}

\item{...}{ignored.}
}
\description{
Leaflet.glify is a web gl renderer plugin for leaflet. See
  \url{https://github.com/robertleeplummerjr/Leaflet.glify} for details
  and documentation. Currently not all functionality is implemented here.
}
\details{
Multipolygons are currently not supported! Make sure you cast your data
  to polygons first (e.g. using \code{sf::st_cast(data, "POLYGON")}.
}
\section{Functions}{
\itemize{
\item \code{addGlifyPoints}: add points to a leaflet map using Leaflet.glify

\item \code{addGlifyPolygons}: add polygons to a leaflet map using Leaflet.glify
}}

\examples{
\dontrun{
library(mapview)
library(leaflet)
library(leaflet.glify)
library(sf)
library(colourvalues)
library(jsonlite)

n = 1e6

df1 = data.frame(id = 1:n,
                 x = rnorm(n, 10, 1),
                 y = rnorm(n, 49, 0.8))
pts = st_as_sf(df1, coords = c("x", "y"), crs = 4326)

cols = colour_values_rgb(pts$id, include_alpha = FALSE) / 255

options(viewer = NULL)

system.time({
  m = leaflet() \%>\%
    addProviderTiles(provider = providers$CartoDB.DarkMatter) \%>\%
    addGlifyPoints(data = pts, color = cols, popup = "id") \%>\%
    addMouseCoordinates() \%>\%
    setView(lng = 10.5, lat = 49.5, zoom = 9)
})

m
}

\dontrun{
library(mapview)
library(leaflet)
library(leaflet.glify)
library(sf)
library(colourvalues)

fran = st_cast(franconia, "POLYGON")

cols = colour_values_rgb(fran$NUTS_ID, include_alpha = FALSE) / 255

options(viewer = NULL)

leaflet() \%>\%
  addProviderTiles(provider = providers$CartoDB.DarkMatter) \%>\%
  addGlifyPolygons(data = fran, color = cols) \%>\%
  addMouseCoordinates() \%>\%
  setView(lng = 10.5, lat = 49.5, zoom = 8)
}

}
